on: [push, pull_request]

jobs:
  ci:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:

          - name: "Linux Clang"
            os: ubuntu-20.04
            build: linux
            compiler: clang

          - name: "Windows x64"
            os: ubuntu-20.04
            build: windows
            compiler: x86_64-w64-mingw32-gcc

          - name: "macOS"
            os: macos-latest
            build: osx
            compiler: clang

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 5
      - run: |
          set -ex
          if [ $BUILD = linux ]; then
            sudo DEBIAN_FRONTEND=noninteractive apt -yq install --no-install-recommends \
              cmake cmake-data yasm check \
              libdbus-1-dev libopenal-dev libopenal-data libopenal1 libv4l-dev
          elif [ $BUILD = windows ]; then
            sudo DEBIAN_FRONTEND=noninteractive apt -yq install --no-install-recommends \
              gcc mingw-w64 gcc-mingw-w64 mingw-w64-common binutils-mingw-w64 \
              yasm libopenal-dev libopenal-data libopenal1
          fi

          ./extra/travis/${BUILD}-before.sh &&
          ./extra/travis/filter_audio.sh &&
          ./extra/travis/${BUILD}-script.sh ||
          ./extra/travis/debug_failure.sh
        env:
          BUILD: ${{ matrix.build }}
